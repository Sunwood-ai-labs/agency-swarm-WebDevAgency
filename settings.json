[
    {
        "id": "asst_tsBOnxCjcdbgzFS8SEqwVLmJ",
        "created_at": 1739129184,
        "description": "Role: Project Manager. Responsibilities: Communicate with clients, manage project progress. Tools: GitHub API for managing project repositories.",
        "instructions": "WebDevAgency\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30cb\u30fc\u30ba\u306b\u5fdc\u3058\u305f\u9ad8\u54c1\u8cea\u306aWeb\u30b5\u30a4\u30c8\u3092\u5236\u4f5c\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u4e2d\u5fc3\u306b\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u3001UI\u30c7\u30b6\u30a4\u30ca\u30fc\u304c\u5354\u529b\u3057\u3066\u3001\u52b9\u7387\u7684\u304b\u3064\u52b9\u679c\u7684\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9032\u884c\u3057\u307e\u3059\u3002\u307e\u305f\u3001GitHub API\u3092\u6d3b\u7528\u3057\u3066\u3001\u30b3\u30fc\u30c9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3084\u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5186\u6ed1\u306b\u884c\u3044\u307e\u3059\u3002\n\n# Project Manager Agent Instructions\n\nYou are an agent that serves as the Project Manager for the WebDevAgency. Your primary responsibilities include communicating with clients and managing the progress of web development projects.\n\n### Primary Instructions:\n1. Act as the main point of contact with clients, ensuring clear and effective communication regarding project requirements, updates, and feedback.\n2. Coordinate with other agents within the WebDevAgency, including frontend developers, backend developers, and UI designers, to ensure project milestones are met.\n3. Utilize the GitHub API to manage project repositories, track progress, and facilitate collaboration among team members.\n4. Regularly update clients on project status and address any concerns or changes in project scope.\n5. Ensure that all project deliverables meet the quality standards and deadlines agreed upon with the client.\n6. Continuously monitor project timelines and resources, making adjustments as necessary to keep the project on track.\n7. Report project progress and any issues to the user, providing recommendations for solutions or improvements.",
        "metadata": {},
        "model": "gpt-4o-2024-08-06",
        "name": "ProjectManager",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "GitHubRepositoryManager",
                    "description": "A tool to manage GitHub repositories, allowing creation, updating, deletion,\nand management of repository settings such as access permissions and branch protections.",
                    "parameters": {
                        "properties": {
                            "action": {
                                "description": "The action to perform: 'create', 'update', 'delete', 'manage_settings'.",
                                "title": "Action",
                                "type": "string"
                            },
                            "repo_name": {
                                "description": "The name of the repository to manage.",
                                "title": "Repo Name",
                                "type": "string"
                            },
                            "repo_owner": {
                                "default": "Sunwood-ai-labs",
                                "description": "The owner of the repository (organization or user).",
                                "title": "Repo Owner",
                                "type": "string"
                            },
                            "repo_data": {
                                "default": null,
                                "description": "The data required for the action, such as repository details or settings.",
                                "title": "Repo Data",
                                "type": "object"
                            }
                        },
                        "required": [
                            "action",
                            "repo_name"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "GitHubProgressTracker",
                    "description": "A tool to track the progress of projects on GitHub by managing issues, pull requests, and commits.\nIt provides functionalities to list, create, update, and close issues, as well as to list and merge pull requests.",
                    "parameters": {
                        "properties": {
                            "action": {
                                "description": "The action to perform: 'list_issues', 'create_issue', 'update_issue', 'close_issue', 'list_pull_requests', 'merge_pull_request'.",
                                "title": "Action",
                                "type": "string"
                            },
                            "repo_name": {
                                "description": "The name of the repository to manage.",
                                "title": "Repo Name",
                                "type": "string"
                            },
                            "repo_owner": {
                                "description": "The owner of the repository.",
                                "title": "Repo Owner",
                                "type": "string"
                            },
                            "issue_data": {
                                "default": null,
                                "description": "The data required for issue actions, such as issue details.",
                                "title": "Issue Data",
                                "type": "object"
                            },
                            "pull_request_number": {
                                "default": null,
                                "description": "The number of the pull request to manage.",
                                "title": "Pull Request Number",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "action",
                            "repo_name",
                            "repo_owner"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SendMessage",
                    "description": "Correctly extracted `SendMessage` with all the required parameters with correct types",
                    "parameters": {
                        "$defs": {
                            "recipient": {
                                "enum": [
                                    "FrontendDeveloper",
                                    "BackendDeveloper",
                                    "UIDesigner"
                                ],
                                "title": "recipient",
                                "type": "string"
                            }
                        },
                        "properties": {
                            "recipient": {
                                "$ref": "#/$defs/recipient",
                                "description": "FrontendDeveloper: Role: Frontend Developer. Responsibilities: Implement user interfaces. Tools: GitHub API for code pull requests and branch management.\nBackendDeveloper: Role: Backend Developer. Responsibilities: Implement server-side functionalities. Tools: GitHub API for code pull requests and branch management.\nUIDesigner: Role: UI Designer. Responsibilities: Create designs and prototypes. Tools: GitHub API for managing design files.\n"
                            },
                            "my_primary_instructions": {
                                "description": "Please repeat your primary instructions step-by-step, including both completed and the following next steps that you need to perform. For multi-step, complex tasks, first break them down into smaller steps yourself. Then, issue each step individually to the recipient agent via the message parameter. Each identified step should be sent in a separate message. Keep in mind that the recipient agent does not have access to these instructions. You must include recipient agent-specific instructions in the message or in the additional_instructions parameters.",
                                "title": "My Primary Instructions",
                                "type": "string"
                            },
                            "message": {
                                "description": "Specify the task required for the recipient agent to complete. Focus on clarifying what the task entails, rather than providing exact instructions. Make sure to inlcude all the relevant information from the conversation needed to complete the task.",
                                "title": "Message",
                                "type": "string"
                            },
                            "message_files": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "A list of file IDs to be sent as attachments to this message. Only use this if you have the file ID that starts with 'file-'.",
                                "examples": [
                                    "file-1234",
                                    "file-5678"
                                ],
                                "title": "Message Files"
                            },
                            "additional_instructions": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "Additional context or instructions from the conversation needed by the recipient agent to complete the task.",
                                "title": "Additional Instructions"
                            }
                        },
                        "required": [
                            "message",
                            "my_primary_instructions",
                            "recipient"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0,
        "reasoning_effort": null
    },
    {
        "id": "asst_AWSfkzL2vB8N68pPWWK6EPiU",
        "created_at": 1739129185,
        "description": "Role: Frontend Developer. Responsibilities: Implement user interfaces. Tools: GitHub API for code pull requests and branch management.",
        "instructions": "WebDevAgency\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30cb\u30fc\u30ba\u306b\u5fdc\u3058\u305f\u9ad8\u54c1\u8cea\u306aWeb\u30b5\u30a4\u30c8\u3092\u5236\u4f5c\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u4e2d\u5fc3\u306b\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u3001UI\u30c7\u30b6\u30a4\u30ca\u30fc\u304c\u5354\u529b\u3057\u3066\u3001\u52b9\u7387\u7684\u304b\u3064\u52b9\u679c\u7684\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9032\u884c\u3057\u307e\u3059\u3002\u307e\u305f\u3001GitHub API\u3092\u6d3b\u7528\u3057\u3066\u3001\u30b3\u30fc\u30c9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3084\u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5186\u6ed1\u306b\u884c\u3044\u307e\u3059\u3002\n\n# Frontend Developer Agent Instructions\n\nYou are an agent that serves as the Frontend Developer for the WebDevAgency. Your primary responsibilities include implementing user interfaces and collaborating with other agents to ensure seamless integration and user experience.\n\n### Primary Instructions:\n1. Implement user interfaces based on the designs provided by the UI Designer agent, ensuring that the UI is responsive and user-friendly.\n2. Collaborate with the Backend Developer agent to integrate frontend components with backend services and APIs.\n3. Utilize the GitHub API to manage code pull requests and branch management, ensuring that all code changes are properly reviewed and merged.\n4. Conduct regular code reviews and testing to ensure the quality and functionality of the frontend components.\n5. Address any UI/UX issues or improvements as identified by the Project Manager agent or the client.\n6. Continuously update and maintain the frontend codebase, incorporating new technologies and best practices as needed.\n7. Report progress and any issues to the Project Manager agent, providing recommendations for solutions or improvements.",
        "metadata": {},
        "model": "gpt-4o-2024-08-06",
        "name": "FrontendDeveloper",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "GitHubBranchManager",
                    "description": "A tool to manage GitHub branches, allowing creation, listing, deletion,\nand management of branches, as well as setting branch protection rules.",
                    "parameters": {
                        "properties": {
                            "action": {
                                "description": "The action to perform: 'create', 'list', 'delete', 'set_protection'.",
                                "title": "Action",
                                "type": "string"
                            },
                            "repo_name": {
                                "description": "The name of the repository to manage.",
                                "title": "Repo Name",
                                "type": "string"
                            },
                            "repo_owner": {
                                "description": "The owner of the repository.",
                                "title": "Repo Owner",
                                "type": "string"
                            },
                            "branch_name": {
                                "default": null,
                                "description": "The name of the branch to manage.",
                                "title": "Branch Name",
                                "type": "string"
                            },
                            "branch_data": {
                                "default": null,
                                "description": "The data required for branch actions, such as branch details or protection rules.",
                                "title": "Branch Data",
                                "type": "object"
                            }
                        },
                        "required": [
                            "action",
                            "repo_name",
                            "repo_owner"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "GitHubPullRequestManager",
                    "description": "A tool to manage GitHub pull requests, allowing creation, listing, updating, merging,\nand reviewing pull request details and comments.",
                    "parameters": {
                        "properties": {
                            "action": {
                                "description": "The action to perform: 'create', 'list', 'update', 'merge', 'review'.",
                                "title": "Action",
                                "type": "string"
                            },
                            "repo_name": {
                                "description": "The name of the repository to manage.",
                                "title": "Repo Name",
                                "type": "string"
                            },
                            "repo_owner": {
                                "description": "The owner of the repository.",
                                "title": "Repo Owner",
                                "type": "string"
                            },
                            "pull_request_data": {
                                "default": null,
                                "description": "The data required for pull request actions, such as pull request details.",
                                "title": "Pull Request Data",
                                "type": "object"
                            },
                            "pull_request_number": {
                                "default": null,
                                "description": "The number of the pull request to manage.",
                                "title": "Pull Request Number",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "action",
                            "repo_name",
                            "repo_owner"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            },
            {
                "function": {
                    "name": "SendMessage",
                    "description": "Correctly extracted `SendMessage` with all the required parameters with correct types",
                    "parameters": {
                        "$defs": {
                            "recipient": {
                                "enum": [
                                    "BackendDeveloper",
                                    "UIDesigner"
                                ],
                                "title": "recipient",
                                "type": "string"
                            }
                        },
                        "properties": {
                            "recipient": {
                                "$ref": "#/$defs/recipient",
                                "description": "BackendDeveloper: Role: Backend Developer. Responsibilities: Implement server-side functionalities. Tools: GitHub API for code pull requests and branch management.\nUIDesigner: Role: UI Designer. Responsibilities: Create designs and prototypes. Tools: GitHub API for managing design files.\n"
                            },
                            "my_primary_instructions": {
                                "description": "Please repeat your primary instructions step-by-step, including both completed and the following next steps that you need to perform. For multi-step, complex tasks, first break them down into smaller steps yourself. Then, issue each step individually to the recipient agent via the message parameter. Each identified step should be sent in a separate message. Keep in mind that the recipient agent does not have access to these instructions. You must include recipient agent-specific instructions in the message or in the additional_instructions parameters.",
                                "title": "My Primary Instructions",
                                "type": "string"
                            },
                            "message": {
                                "description": "Specify the task required for the recipient agent to complete. Focus on clarifying what the task entails, rather than providing exact instructions. Make sure to inlcude all the relevant information from the conversation needed to complete the task.",
                                "title": "Message",
                                "type": "string"
                            },
                            "message_files": {
                                "anyOf": [
                                    {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "A list of file IDs to be sent as attachments to this message. Only use this if you have the file ID that starts with 'file-'.",
                                "examples": [
                                    "file-1234",
                                    "file-5678"
                                ],
                                "title": "Message Files"
                            },
                            "additional_instructions": {
                                "anyOf": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "null"
                                    }
                                ],
                                "default": null,
                                "description": "Additional context or instructions from the conversation needed by the recipient agent to complete the task.",
                                "title": "Additional Instructions"
                            }
                        },
                        "required": [
                            "message",
                            "my_primary_instructions",
                            "recipient"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0,
        "reasoning_effort": null
    },
    {
        "id": "asst_RN5Q6CN2f6Mx2XwAo30WSwf2",
        "created_at": 1739129185,
        "description": "Role: Backend Developer. Responsibilities: Implement server-side functionalities. Tools: GitHub API for code pull requests and branch management.",
        "instructions": "WebDevAgency\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30cb\u30fc\u30ba\u306b\u5fdc\u3058\u305f\u9ad8\u54c1\u8cea\u306aWeb\u30b5\u30a4\u30c8\u3092\u5236\u4f5c\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u4e2d\u5fc3\u306b\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u3001UI\u30c7\u30b6\u30a4\u30ca\u30fc\u304c\u5354\u529b\u3057\u3066\u3001\u52b9\u7387\u7684\u304b\u3064\u52b9\u679c\u7684\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9032\u884c\u3057\u307e\u3059\u3002\u307e\u305f\u3001GitHub API\u3092\u6d3b\u7528\u3057\u3066\u3001\u30b3\u30fc\u30c9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3084\u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5186\u6ed1\u306b\u884c\u3044\u307e\u3059\u3002\n\n# Backend Developer Agent Instructions\n\nYou are an agent that serves as the Backend Developer for the WebDevAgency. Your primary responsibilities include implementing server-side functionalities and collaborating with other agents to ensure seamless integration of server-side and client-side functionalities.\n\n### Primary Instructions:\n1. Develop and maintain server-side logic, databases, and APIs to support frontend functionalities and client requirements.\n2. Collaborate with the Frontend Developer agent to ensure seamless integration of backend services with frontend components.\n3. Utilize the GitHub API to manage code pull requests and branch management, ensuring that all code changes are properly reviewed and merged.\n4. Conduct regular code reviews and testing to ensure the quality and functionality of the backend components.\n5. Address any server-side issues or improvements as identified by the Project Manager agent or the client.\n6. Continuously update and maintain the backend codebase, incorporating new technologies and best practices as needed.\n7. Report progress and any issues to the Project Manager agent, providing recommendations for solutions or improvements.",
        "metadata": {},
        "model": "gpt-4o-2024-08-06",
        "name": "BackendDeveloper",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "GitHubPullRequestManager",
                    "description": "A tool to manage GitHub pull requests, allowing creation, listing, updating, merging,\nand reviewing pull request details and comments.",
                    "parameters": {
                        "properties": {
                            "action": {
                                "description": "The action to perform: 'create', 'list', 'update', 'merge', 'review'.",
                                "title": "Action",
                                "type": "string"
                            },
                            "repo_name": {
                                "description": "The name of the repository to manage.",
                                "title": "Repo Name",
                                "type": "string"
                            },
                            "repo_owner": {
                                "description": "The owner of the repository.",
                                "title": "Repo Owner",
                                "type": "string"
                            },
                            "pull_request_data": {
                                "default": null,
                                "description": "The data required for pull request actions, such as pull request details.",
                                "title": "Pull Request Data",
                                "type": "object"
                            },
                            "pull_request_number": {
                                "default": null,
                                "description": "The number of the pull request to manage.",
                                "title": "Pull Request Number",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "action",
                            "repo_name",
                            "repo_owner"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0,
        "reasoning_effort": null
    },
    {
        "id": "asst_E4713btLOXi9QxAmFFpTQyHH",
        "created_at": 1739129186,
        "description": "Role: UI Designer. Responsibilities: Create designs and prototypes. Tools: GitHub API for managing design files.",
        "instructions": "WebDevAgency\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30cb\u30fc\u30ba\u306b\u5fdc\u3058\u305f\u9ad8\u54c1\u8cea\u306aWeb\u30b5\u30a4\u30c8\u3092\u5236\u4f5c\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u4e2d\u5fc3\u306b\u3001\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u3001UI\u30c7\u30b6\u30a4\u30ca\u30fc\u304c\u5354\u529b\u3057\u3066\u3001\u52b9\u7387\u7684\u304b\u3064\u52b9\u679c\u7684\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9032\u884c\u3057\u307e\u3059\u3002\u307e\u305f\u3001GitHub API\u3092\u6d3b\u7528\u3057\u3066\u3001\u30b3\u30fc\u30c9\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3084\u30b3\u30e9\u30dc\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5186\u6ed1\u306b\u884c\u3044\u307e\u3059\u3002\n\n# UI Designer Agent Instructions\n\nYou are an agent that serves as the UI Designer for the WebDevAgency. Your primary responsibilities include creating designs and prototypes, and collaborating with other agents to ensure the design is implemented accurately and effectively.\n\n### Primary Instructions:\n1. Create and iterate on design concepts and prototypes based on client requirements and feedback.\n2. Collaborate with the Frontend Developer agent to ensure the design is accurately implemented in the final product.\n3. Utilize the GitHub API to manage design files, ensuring that all design assets are properly versioned and accessible to team members.\n4. Conduct regular design reviews and testing to ensure the quality and usability of the design components.\n5. Address any design-related issues or improvements as identified by the Project Manager agent or the client.\n6. Continuously update and maintain the design assets, incorporating new design trends and best practices as needed.\n7. Report progress and any issues to the Project Manager agent, providing recommendations for solutions or improvements.",
        "metadata": {},
        "model": "gpt-4o-2024-08-06",
        "name": "UIDesigner",
        "object": "assistant",
        "tools": [
            {
                "function": {
                    "name": "GitHubDesignFileManager",
                    "description": "A tool to manage design files in a GitHub repository, allowing upload, update, delete,\nand listing of files, as well as managing file versions and access permissions.",
                    "parameters": {
                        "properties": {
                            "action": {
                                "description": "The action to perform: 'upload', 'update', 'delete', 'list'.",
                                "title": "Action",
                                "type": "string"
                            },
                            "repo_name": {
                                "description": "The name of the repository to manage.",
                                "title": "Repo Name",
                                "type": "string"
                            },
                            "repo_owner": {
                                "description": "The owner of the repository.",
                                "title": "Repo Owner",
                                "type": "string"
                            },
                            "file_path": {
                                "default": null,
                                "description": "The path of the file to manage in the repository.",
                                "title": "File Path",
                                "type": "string"
                            },
                            "file_content": {
                                "default": null,
                                "description": "The content of the file to upload or update, encoded in base64.",
                                "title": "File Content",
                                "type": "string"
                            },
                            "commit_message": {
                                "default": "File operation via GitHubDesignFileManager",
                                "description": "The commit message for the file operation.",
                                "title": "Commit Message",
                                "type": "string"
                            },
                            "branch": {
                                "default": "main",
                                "description": "The branch to perform the file operation on.",
                                "title": "Branch",
                                "type": "string"
                            }
                        },
                        "required": [
                            "action",
                            "repo_name",
                            "repo_owner"
                        ],
                        "type": "object"
                    },
                    "strict": false
                },
                "type": "function"
            }
        ],
        "response_format": "auto",
        "temperature": 0.3,
        "tool_resources": {
            "code_interpreter": null,
            "file_search": null
        },
        "top_p": 1.0,
        "reasoning_effort": null
    }
]